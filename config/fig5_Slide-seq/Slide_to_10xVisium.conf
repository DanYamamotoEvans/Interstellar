[general]
# Working directory
PROJECT_DIR=/path/to/project_dir

# Path to template shellscript
SET_SHELL_ENV=/path/to/set_shell_env

SAMPLESHEET=/path/to/samplesheet

[value_extraction]
# Input file path
READ1_PATH=/path/to/R1
READ2_PATH=/path/to/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<src_segment1>.{13})(?P<src_segment2>.{8}).*$
READ2_STRUCTURE=^(?P<src_segment3>.*)$

# Sequence filtering and correction for each segment
segment1.filtered.corrected =QUALITY_FILTER(source:src_segment1, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/path/to/slideseq__bc.txt)
segment2.filtered =QUALITY_FILTER(source:src_segment2, min_nucleotide_Q-score:5, min_avg_Q-score:20)
segment3.filtered=QUALITY_FILTER(source:src_segment3, min_nucleotide_Q-score:5, min_avg_Q-score:20)

[value_translation]
#Value to destination sequence conversion
dest_segment1=SEQ2SEQ(source:segment1.filtered.corrected,conversion_table:/path/to/slide_to_visium_conversion_table.txt)
dest_segment2=segment2.filtered
dest_segment3=segment3.filtered

#Read structure configuration
READ1_STRUCTURE=dest_segment1+dest_segment2+dest_segment+"AAAA"
READ2_STRUCTURE=dest_segment3

