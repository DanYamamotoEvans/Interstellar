[general]
# Working directory
PROJECT_DIR=/path/to/project_dir

# Path to template shellscript
SET_SHELL_ENV=/path/to/set_shell_env

[value_extraction]
# Input file path
READ1_DIR=/path/to/R1
READ2_DIR=/path/to/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<raw_bio_F>.*)$
READ2_STRUCTURE=^(?P<raw_bio_R>.*)$
INDEX1_STRUCTURE=^(?P<raw_n7>.{8})(?P<raw_p7>.{10})(?P<raw_n5>.{8})(?P<raw_p5>.{10})$

# Sequence filtering and correction for each segment
n5.filtered.corrected = QUALITY_FILTER(source:raw_n5, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/path/to/n5.txt) >>  SEQ2VALUE()
n7.filtered.corrected = QUALITY_FILTER(source:raw_n7, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/path/to/n7.txt) >>  SEQ2VALUE()
p5.filtered.corrected = QUALITY_FILTER(source:raw_p5, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/path/to/p5.txt) >>  SEQ2VALUE()
p7.filtered.corrected = QUALITY_FILTER(source:raw_p7, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/path/to/p7.txt) >>  SEQ2VALUE()
bio_F.filtered=QUALITY_FILTER(source:raw_bio_F, min_nucleotide_Q-score:5, min_avg_Q-score:20)
bio_R.filtered=QUALITY_FILTER(source:raw_bio_R, min_nucleotide_Q-score:5, min_avg_Q-score:20)

[value_translation]
#Value to destination sequence conversion
dest_segment1=VALUE2SEQ(source:n5.filtered.corrected,n7.filtered.corrected,p5.filtered.corrected,p7.filtered.corrected, allowlist_path:/path/to/737K-cratac-v1.txt)
dest_segment2=bio_F.filtered
dest_segment3=bio_R.filtered

#Read structure configuration
READ1_STRUCTURE=dest_segment2
READ2_STRUCTURE=dest_segment3
INDEX1_STRUCTURE=dest_segment1

