[general]
# Working directory
PROJECT_DIR= /path/to/drop_to_10x_rand/

# Path to template shellscript that
SET_SHELL_ENV= /path/to/set_shell_env

SAMPLESHEET=/path/to/samplesheet

[value_extraction]
# Input file path
READ1_PATH= /path/to/R1
READ2_PATH= /path/to/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<raw_cb>.{12})(?P<raw_umi>.{8})$
READ2_STRUCTURE=^(?P<raw_bio>.*)$

# Parental-local variable allocations
# raw_umi=CHILD_OF(raw_cb)

# Sequence filtering and correction for each segment
segment1.filtered.corrected.value =QUALITY_FILTER(source:raw_cb, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> I2M_CORRECTION(levenshtein_distance:1) >> SEQ2VALUE()
segment3.filtered =QUALITY_FILTER(source:raw_umi, min_nucleotide_Q-score:5, min_avg_Q-score:20) 
segment5.filtered=QUALITY_FILTER(source:raw_bio, min_nucleotide_Q-score:5, min_avg_Q-score:20)


[value_translation]
#Value to destination sequence conversion
dest_segment1=VALUE2SEQ(source:segment1.filtered.corrected.value, allowlist_path:/path/to/10x_3M-february-2018.txt)
dest_segment2=segment3.filtered.value
dest_segment3=segment5.filtered

#Read structure configuration
READ1_STRUCTURE=dest_segment1+dest_segment2+"AAAA"
READ2_STRUCTURE=dest_segment3

