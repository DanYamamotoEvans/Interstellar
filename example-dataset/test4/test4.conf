[general]
# Working directory
PROJECT_DIR=/path/to/project_dir

# Path to template shellscript
SET_SHELL_ENV=/path/to/template.sh


[value_extraction]
# Input file path
READ1_DIR=/path/to/Interstellar/example-dataset/test4/R1
READ2_DIR=/path/to/Interstellar/example-dataset/test4/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<src_segment1>.{13})(?P<src_segment2>.{8}).*$
READ2_STRUCTURE=^(?P<src_segment3>.*)$

# Sequence filtering and correction for each segment
segment1.filtered.corrected =QUALITY_FILTER(source:src_segment1, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> WHITELIST_CORRECT(levenshtein_distance:1,path:/path/to/Interstellar/example-dataset/whitelists/slide_cereb1_bc.txt)
segment2.filtered =QUALITY_FILTER(source:src_segment2, min_nucleotide_Q-score:5, min_avg_Q-score:20)
segment3.filtered=QUALITY_FILTER(source:src_segment3, min_nucleotide_Q-score:5, min_avg_Q-score:20)



[value_translation]
#Value to destination sequence conversion
dest_segment1=SEQ2SEQ(source:segment1.filtered.corrected,conversion_table:/path/to/Interstellar/example-dataset/whitelists/slide_to_visium_cereb1.correspo.txt)
dest_segment2=segment2.filtered
dest_segment3=segment3.filtered
dest_segment4="AAAA"

#Read structure configuration
READ1_STRUCTURE=dest_segment1+dest_segment2+dest_segment4
READ2_STRUCTURE=dest_segment3


