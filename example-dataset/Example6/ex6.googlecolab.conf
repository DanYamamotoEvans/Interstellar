[general]
# Working directory
PROJECT_DIR=/content/ex6

# Path to template shellscript
SET_SHELL_ENV=/content/tools/Interstellar/example-dataset/templates/set_shell_env_colab

SAMPLESHEET=/content/tools/Interstellar/example-dataset/Example5/samplesheet.tsv

[value_extraction]
# Input file path
READ1_PATH=/content/tools/Interstellar/example-dataset/Example5/R1
READ2_PATH=/content/tools/Interstellar/example-dataset/Example5/R2

# Paired-end reads to be merged by FLASH2. Skip if you don't need to merge.
FLASH=READ1-READ2

# Minimum overlap length for the FLASH2 option "-m". Skip if you don't need to merge.
FLASH_MIN_OVERLAP=20

# Maximum overlap length for the FLASH2 option "-M". Skip if you don't need to merge.
FLASH_MAX_OVERLAP=100

# If reads are merged by FLASH2 and searching for three different read structures
READ_FLASH_STRUCTURE_1=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<DBU1>CCATACGAGCACATTACGGG){s<=2}(?P<bc1>.+)(?P<DBU2>CTAACTCGCATACCTCTGATAAC){s<=2}(?P<lox2272>.+)(?P<DBlox2272>TGTCAGCACTCTGTCAAAATAGATCG){s<=2}....(?P<DBD1>TCGATAGGTGCGTGTGAAGG){s<=2}(?P<bc2>.+)(?P<DBD2>CCTCAGTCGCTCAGTCAAG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$
READ_FLASH_STRUCTURE_2=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<DBloxP>TTAAGTAAGTAATGGCAAACAGCTATTAT){s<=2}(?P<loxp>.+){s<=2}(?P<DBU1>CCATACGAGCACATTACGGG){s<=2}(?P<bc1>.+)(?P<DBU2>CTAACTCGCATACCTCTGATAAC){s<=2}(?P<lox2272>.+){s<=2}(?P<DBlox2272>TGTCAGCACTCTGTCAAAATAGATCG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$
READ_FLASH_STRUCTURE_3=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<ADU1>CCCTTAGAACCGAGAGTGTG){s<=2}(?P<bc1>.+)(?P<ADU2>CACTCCGTTCGTCACTCAATAA){s<=2}...(?P<ADloxP>CAGCACTCTGTCAAAATAGATCGGAAA){s<=2}(?P<loxp>.+){s<=2}(?P<ADD1>CTCCAGGGTTAGGCAGATG){s<=2}(?P<bc2>.+)(?P<ADD2>CAATCGCACTATCCCGCTG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$
READ_FLASH_STRUCTURE_4=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<ADloxP>CAGCACTCTGTCAAAATAGATCGG){s<=2}...(?P<loxp>.+){s<=2}(?P<ADD1>CTCCAGGGTTAGGCAGATG){s<=2}(?P<bc2>.+)(?P<ADD2>CAATCGCACTATCCCGCTG){s<=2}(?P<lox2272>.+){s<=2}(?P<ADlox2272>TTATGGGTATTATGGGTTAGGGATAACAGGGTAATAAGCTCTAAGTAAGTAACGGCCGCC){s<=3}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$

# Sequence filtering and correction for each segment
plate1.filtered.corrected=QUALITY_FILTER(source:plate1,min_nucleotide_Q-score:10,min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1, path:/content/tools/Interstellar/example-dataset/allowlists/rcppcr_illumina_idx.txt)
plate2.filtered.corrected =QUALITY_FILTER(source:plate2,min_nucleotide_Q-score:10,min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1, path:/content/tools/Interstellar/example-dataset/allowlists/rcppcr_illumina_idx.txt)
row_idx.filtered.corrected =QUALITY_FILTER(source:row_idx,min_nucleotide_Q-score:10,min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1, path:/content/tools/Interstellar/example-dataset/allowlists/rcppcr_illumina_idx.txt)
col_idx.filtered.corrected =QUALITY_FILTER(source:col_idx,min_nucleotide_Q-score:10,min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1, path:/content/tools/Interstellar/example-dataset/allowlists/rcppcr_illumina_idx.txt)

bc1.filtered=QUALITY_FILTER(source:bc1,min_nucleotide_Q-score:10,min_avg_Q-score:20)
bc2.filtered=QUALITY_FILTER(source:bc2,min_nucleotide_Q-score:10,min_avg_Q-score:20)
lox2272.filtered=QUALITY_FILTER(source:lox2272,min_nucleotide_Q-score:10,min_avg_Q-score:20)
DBlox2272.filtered=QUALITY_FILTER(source:DBlox2272,min_nucleotide_Q-score:10,min_avg_Q-score:20)
DBloxP.filtered=QUALITY_FILTER(source:DBloxP,min_nucleotide_Q-score:10,min_avg_Q-score:20)
ADloxP.filtered=QUALITY_FILTER(source:ADloxP,min_nucleotide_Q-score:10,min_avg_Q-score:20)
loxp.filtered=QUALITY_FILTER(source:loxp,min_nucleotide_Q-score:10,min_avg_Q-score:20)
ADlox2272.filtered=QUALITY_FILTER(source:ADlox2272,min_nucleotide_Q-score:10,min_avg_Q-score:20)



[demultiplex]
# Clean segment names separating the file.
KEY=plate1.filtered.corrected,plate2.filtered.corrected,row_idx.filtered.corrected,col_idx.filtered.corrected

# Export data format, FASTQ or TSV
FORMAT=FASTQ

# Output read structure if FORMAT=fastq
READ1_STRUCTURE=bc1.filtered+bc2.filtered
READ2_STRUCTURE=lox2272.filtered+loxp.filtered,ADlox2272.filt+"AAAAAAAAA"
INDEX1_STRUCTURE=
INDEX2_STRUCTURE=

# Header annotation
READ1_HEADER_ADDITION=DBlox2272.filtered+DBloxP.filtered
READ2_HEADER_ADDITION=ADloxP.filtered
