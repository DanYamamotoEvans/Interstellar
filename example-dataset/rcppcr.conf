[general]
# general: general settings
#     In this section, you can set general settings such as project directory and name
PROJECT_DIR=~/files/m96b/kijima.yusuke/work/Interstellar/workspace/rcppcr
TEMPLATE_SHELLSCRIPT=~/files/m96b/kijima.yusuke/work/Interstellar/shell_template/template.sh
CHUNKSIZE=2000000





[value_extraction]
# value_extraction: sequence to value
#     In this section, the input FASTQ files are segmented, sequence segments 
#     are error-corrected and values are generated.
#     If you just want to obtain a value matrix or error-corrected seuence 
#     segment table, only having this section is fine.

# Input file path
READ1_DIR=~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/read1
READ2_DIR=~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/read2
INDEX1_DIR=
INDEX2_DIR=

# If you want to merge paired-reads FASTQs by FLASH. Ignore if you don't want.
FLASH=READ1-READ2 
FLASH_MIN_OVERLAP=20
FLASH_MAX_OVERLAP=250

# Read structure configuration
READ_FLASH_STRUCTURE_1=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<DBU1>CCATACGAGCACATTACGGG){s<=2}(?P<bc1>.+)(?P<DBU2>CTAACTCGCATACCTCTGATAAC){s<=2}(?P<lox2272>.+)(?P<DBlox2272>TGTCAGCACTCTGTCAAAATAGATCG){s<=2}....(?P<DBD1>TCGATAGGTGCGTGTGAAGG){s<=2}(?P<bc2>.+)(?P<DBD2>CCTCAGTCGCTCAGTCAAG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$

READ_FLASH_STRUCTURE_2=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<DBloxP>TTAAGTAAGTAATGGCAAACAGCTATTAT){s<=2}(?P<loxp>.+){s<=2}(?P<DBU1>CCATACGAGCACATTACGGG){s<=2}(?P<bc1>.+)(?P<DBU2>CTAACTCGCATACCTCTGATAAC){s<=2}(?P<lox2272>.+){s<=2}(?P<DBlox2272>TGTCAGCACTCTGTCAAAATAGATCG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$

READ_FLASH_STRUCTURE_3=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<ADU1>CCCTTAGAACCGAGAGTGTG){s<=2}(?P<bc1>.+)(?P<ADU2>CACTCCGTTCGTCACTCAATAA){s<=2}...(?P<ADloxP>CAGCACTCTGTCAAAATAGATCGGAAA){s<=2}(?P<loxp>.+){s<=2}(?P<ADD1>CTCCAGGGTTAGGCAGATG){s<=2}(?P<bc2>.+)(?P<ADD2>CAATCGCACTATCCCGCTG){s<=2}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$

READ_FLASH_STRUCTURE_4=^.+(?P<plate1>.{9})(?P<PS1>TAACTTACGGAGTCGCTCTACG){s<=1}(?P<row_idx>.{9})(?P<ADloxP>CAGCACTCTGTCAAAATAGATCGG){s<=2}...(?P<loxp>.+){s<=2}(?P<ADD1>CTCCAGGGTTAGGCAGATG){s<=2}(?P<bc2>.+)(?P<ADD2>CAATCGCACTATCCCGCTG){s<=2}(?P<lox2272>.+){s<=2}(?P<ADlox2272>TTATGGGTATTATGGGTTAGGGATAACAGGGTAATAAGCTCTAAGTAAGTAACGGCCGCC){s<=3}(?P<col_idx>.{9})(?P<PS2>CAGGACCTAAAGAATCCCATCC){s<=1}(?P<plate2>.{9}).*$


# Sequence filtering and correction for each segment
# Available functions
#     - QUALITY_FILTER(source:..., min_base_score:5, min_avg_score:20)
#       Filtering out sequences that do not meet the condition. 
#       * source: target segment name
#       * min_base_score: minimum allowable quality score for all bases
#       * min_avg_score: minimum avarage quality score for the sequence segment
#     - PASS(source:..., length:)
#       Do not perform quality filtering, sequence correction and value conversion for the segment. 
#       * source: target segment name
#     - KNEE_CORRECT(rank:auto, dist:1)
#       Perform sequence error-correction based on the knee point on the rank-count plot.
#       * source: target segment name
#       * rank: If 'auto' is specified, the knee point is automatically computed. A numerical 
#               value can also be specified to manually determine the rank for the knee point.
#       * dist: Maximum Levenshtein distance to error-correct the minority sequences comparing 
#               with the best-match sequences in the majority sequence population. 
#     - WHITELIST_CORRECT(path:..., dist:1)
#       Perform sequence error-correction based on the sequence whitelist.
#       * source: target segment name
#       * path: sequence whitelist path
#       * dist: Maximum Levenshtein distance to error-correct the sequences comparing with
#               the best-match sequences in the whitelist. 
#     - BARTENDER()
#       Perform sequence error-correction by Bartender.
#       * source: target segment name
#       * -c: the frequency cutoff.
#       * -d: The maximum cluster distance that may be merged.
#       * -z: The cluster merging threshold.
#       * -l: The seed length.
#       * -s:  The number of non-overlapping positions between two adjacent seeds.
#     - VALUE()
#       Convert sequence into value for the segment.
#       * source: target segment name

s_plate1 = QUALITY_FILTER(source:plate1,min_base_score:10,min_avg_score:20) >> WHITELIST_CORRECT(dist:1, path:~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/illumina_idx.withRevComp.txt)
s_plate2 = QUALITY_FILTER(source:plate2,min_base_score:10,min_avg_score:20) >> WHITELIST_CORRECT(dist:1, path:~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/illumina_idx.withRevComp.txt)
s_row_idx = QUALITY_FILTER(source:row_idx,min_base_score:10,min_avg_score:20) >> WHITELIST_CORRECT(dist:1, path:~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/illumina_idx.withRevComp.txt)
s_col_idx = QUALITY_FILTER(source:col_idx,min_base_score:10,min_avg_score:20) >> WHITELIST_CORRECT(dist:1, path:~/files/m96b/kijima.yusuke/work/Interstellar/dataset/rcppcr/illumina_idx.withRevComp.txt)

s_bc1=QUALITY_FILTER(source:bc1,min_base_score:10,min_avg_score:20)
s_bc2=QUALITY_FILTER(source:bc2,min_base_score:10,min_avg_score:20)
s_lox2272=QUALITY_FILTER(source:lox2272,min_base_score:10,min_avg_score:20)
s_DBlox2272=QUALITY_FILTER(source:DBlox2272,min_base_score:10,min_avg_score:20)
s_DBloxP=QUALITY_FILTER(source:DBloxP,min_base_score:10,min_avg_score:20)
s_ADloxP=QUALITY_FILTER(source:ADloxP,min_base_score:10,min_avg_score:20)
s_loxp=QUALITY_FILTER(source:loxp,min_base_score:10,min_avg_score:20)
s_ADlox2272=QUALITY_FILTER(source:ADlox2272,min_base_score:10,min_avg_score:20)


[demultiplex]
KEY=s_plate1,s_plate2,s_row_idx,s_col_idx
TARGET=s_bc1,s_bc2,s_lox2272,s_DBlox2272,s_DBloxP,s_ADloxP,s_loxp,s_ADlox2272
FORMAT=tsv
#READ1_STRUCTURE=cb_value1+umi_value3
#READ2_STRUCTURE=const_value4+bio_value5



