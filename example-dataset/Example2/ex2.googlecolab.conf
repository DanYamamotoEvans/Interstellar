[general]
# Working directory
PROJECT_DIR=/content/ex2

# Path to template shellscript
SET_SHELL_ENV=/content/tools/Interstellar/example-dataset/templates/set_shell_env_colab

[value_extraction]
# Input file path
READ1_DIR=/content/tools/Interstellar/example-dataset/Example2/R1
READ2_DIR=/content/tools/Interstellar/example-dataset/Example2/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<src_segment1>.{9,10})(?P<src_segment2>CAGAGC){s<=2}(?P<src_segment3>.{8})(?P<src_segment4>.{10}).*$
READ2_STRUCTURE=^(?P<src_segment5>.*)$

# Parental-local value allocations
src_segment3=CHILD_OF(src_segment1,src_segment4)

# Sequence filtering and correction for each segment
segment1.filtered.corrected.value =QUALITY_FILTER(source:src_segment1, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/content/tools/Interstellar/example-dataset/allowlists/sci-RNA-seq3_HP_purified_allowlist.txt) >>  SEQ2VALUE()
segment4.filtered.corrected.value =QUALITY_FILTER(source:src_segment4, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/content/tools/Interstellar/example-dataset/allowlists/sci-RNA-seq3_RT_purified_allowlist.txt) >>  SEQ2VALUE()
segment3.filtered.value =QUALITY_FILTER(source:src_segment3, min_nucleotide_Q-score:5, min_avg_Q-score:20) >>  SEQ2VALUE()
segment5.filtered=QUALITY_FILTER(source:src_segment5, min_nucleotide_Q-score:5, min_avg_Q-score:20)

[value_translation]
#Value to destination sequence conversion
dest_segment1=VALUE2SEQ(source:segment1.filtered.corrected.value, segment4.filtered.corrected.value, allowlist_path:/content/tools/Interstellar/example-dataset/allowlists/3M-february-2018.txt)
dest_segment2=VALUE2SEQ(source:segment3.filtered.value, randseq_pattern:NNNNNNNNNNNN)
dest_segment3=segment5.filtered

#Read structure configuration
READ1_STRUCTURE=dest_segment1+dest_segment2
READ2_STRUCTURE=dest_segment3

