[general]
# Working directory
PROJECT_DIR=/content/project_dir

# Path to template shellscript
SET_SHELL_ENV =/content/tools/Interstellar/example-dataset/templates/set_shell_env_colab

SAMPLESHEET=/content/tools/Interstellar/example-dataset/Example3/samplesheet.tsv

[value_extraction]
# Input file path
READ1_PATH=/content/tools/Interstellar/example-dataset/Example3/R1
READ2_PATH=/content/tools/Interstellar/example-dataset/Example3/R2

# Read structure patterns by regular expression
READ1_STRUCTURE=^(?P<src_segment1>.{14})(?P<src_segment2>.{8}).*$
READ2_STRUCTURE=^(?P<src_segment3>.*)$

# Parental-local value allocations
src_segment2=CHILD_OF(src_segment1)

# Sequence filtering and correction for each segment
segment1.filtered.corrected.value =QUALITY_FILTER(source:src_segment1, min_nucleotide_Q-score:5, min_avg_Q-score:20) >> M2A_CORRECTION(levenshtein_distance:1,path:/content/tools/Interstellar/example-dataset/allowlists/CellBarcode_QuartzSeq2_v31.txt) >>  SEQ2VALUE()
segment2.filtered.value=QUALITY_FILTER(source:src_segment2, min_nucleotide_Q-score:5, min_avg_Q-score:20) >>  SEQ2VALUE()
segment3.filtered=QUALITY_FILTER(source:src_segment3, min_nucleotide_Q-score:5, min_avg_Q-score:20)

[value_translation]
#Value to destination sequence conversion
dest_segment1,dest_segment2,dest_segment3=VALUE2SEQ(source: segment1.filtered.corrected.value, allowlist_path:/content/tools/Interstellar/example-dataset/allowlists/split.round1.txt,/content/tools/Interstellar/example-dataset/allowlists/split.round2.txt,/content/tools/Interstellar/example-dataset/allowlists/split.round3.txt)
dest_segment4=VALUE2SEQ(source: segment2.filtered.value, randseq_pattern:NNNNNNNNNN)
dest_segment5=segment3.filtered

#Read structure configuration
READ1_STRUCTURE=dest_segment4+dest_segment3+"GTGGCCGATGTTTCGCATCGGCGTACGACT"+dest_segment2+"ATCCACGTGCTTGAGAGGCCAGAGCATTCG"+dest_segment1
READ2_STRUCTURE=dest_segment5



