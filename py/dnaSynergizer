#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
from func import arg
from func import dnaSyn_import
from func import dnaSyn_qc
from func import dnaSyn_to_bt
from func import dnaSyn_correct
from func import dnaSyn_mk_sval
from func import dnaSyn_buildTree
from func import dnaSyn_mergeTree
from func import dnaSyn_convert
from func import dnaSyn_bc_sort
from func import dnaSyn_export
from func import dnaSyn_demultiplex
from func import dnaSyn_tag
from func import dnaSyn_streamline

'''
Current available commands
 - streamline
 - import
 - QC
 - correct
 - mk_sval
 - to_bt
 - buildTree
 - mergeTree
 - convert
 - bc_sort
 - export
 - demultiplex
 - tag
'''

def call_general_help():
    print("\nCurrent available commands:",flush=True)
    print("\n".join([" - streamline"," - import"," - qc"," - correct"," - mk_sval"," - to_bt"," - buildTree"," - mergeTree"," - convert"," - bc_sort"," - export"," - demultiplex"," - tag"]),flush=True)

if __name__=="__main__":
    cmd=sys.argv[1]
    print("DNA Synergizer 1.0",flush=True)
    if cmd not in ["streamline","import","qc","correct","mk_sval","to_bt","buildTree","mergeTree","convert","bc_sort","export","demultiplex","tag","-h"]:
        print("\nCommand '"+cmd+"' is not found.",flush=True)
        exit()

    if cmd=="-h":
        call_general_help()
        exit()
    
    opt=arg.getargs(cmd)

    if cmd == "import":
        print("\ndnaSynergizer import",flush=True)
        s=dnaSyn_import.settings_import(opt)
        s.settingGetter()
        print("start read import...",flush=True)
        baristaImport=dnaSyn_import.BARISTA_IMPORT(s)
        baristaImport.importFastq()
        print("start read extraction...",flush=True)
        if s.simple:
            print("\nextraction method: Simple extraction\n",flush=True)
            baristaImport.simple_extract()
        else:
            print("\nextraction method: Regular expression\n",flush=True)
            baristaImport.extractComponents()
            print("export extracted file...",flush=True)
            baristaImport.exportExtractedComponents()

    elif cmd=="qc":
        print("\ndnaSynergizer qc",flush=True)
        s=dnaSyn_qc.settings_qc(opt)
        s.settingGetter()
        print("start segment QC...",flush=True)
        obj_qc=dnaSyn_qc.BARISTA_QC(s)
        obj_qc.qualityCheck()

    elif cmd=="to_bt":
        print("\ndnaSynergizer to_bt",flush=True)
        s=dnaSyn_to_bt.settings_to_bt(opt)
        s.settingGetter()
        obj_to_bt=dnaSyn_to_bt.BARISTA_TO_BT(s)
        obj_to_bt.to_bt()

    elif cmd=="correct":
        print("\ndnaSynergizer correct",flush=True)
        s=dnaSyn_correct.settings_correct(opt)
        s.settingGetter()
        obj_correct=dnaSyn_correct.BARISTA_CORRECT(s)
        obj_correct.importExtractedComponents()
        obj_correct.correct_component()

    # elif cmd.command=="from_bt":
    #     cmdopt=settingImporter.get_option_from_bt()
    #     settings=settings_from_bt(cmdopt)
    #     settings.settingGetter()
    #     obj_from_bt=BARISTA_FROM_BT(settings)
    #     obj_from_bt.make_corrected_dict()

    elif cmd=="mk_sval":
        print("\ndnaSynergizer mk_sval",flush=True)
        s=dnaSyn_mk_sval.settings_make_s(opt)
        s.settingGetter()
        obj_s=dnaSyn_mk_sval.BARISTA_MAKE_S(s)
        obj_s.make_s_seq()

        if not s.resultonly:
            obj_s.make_s_value()
            
    elif cmd=="buildTree":
        print("\ndnaSynergizer buildTree",flush=True)
        s=dnaSyn_buildTree.settings_buildTree(opt)
        s.settingGetter()
        baristaTree=dnaSyn_buildTree.BARISTA_BUILDTREE(s)
        baristaTree.buildTree()        

    elif cmd=="mergeTree":
        print("\ndnaSynergizer mergeTree",flush=True)
        s=dnaSyn_mergeTree.settings_mergetree(opt)
        s.settingGetter()
        baristaMergetree=dnaSyn_mergeTree.BARISTA_MERGETREE(s)
        baristaMergetree.mergeTree_v2()

    elif cmd=="convert":
        print("\ndnaSynergizer convert",flush=True)
        s=dnaSyn_convert.settings_convert(opt)
        s.settingGetter()
        baristaConvert=dnaSyn_convert.BARISTA_CONVERT(s)
        baristaConvert.convert()

    elif cmd=="bc_sort":
        print("\ndnaSynergizer bc_sort",flush=True)
        barista_bc_sort=dnaSyn_bc_sort.BARISTA_BC_SORT(opt)
        barista_bc_sort.bc_sort_settingGetter()
        barista_bc_sort.bc_sort()

    elif cmd=="export":
        print("\ndnaSynergizer export",flush=True)
        s=dnaSyn_export.settings_export(opt)
        s.settingGetter()

        baristaExport=dnaSyn_export.BARISTA_EXPORT(s)
        baristaExport.generateReferences()
        baristaExport.exportSequence()

    elif cmd=="demultiplex":
        print("\ndnaSynergizer demultiplex",flush=True)
        s=dnaSyn_demultiplex.settings_demultiplex(opt)
        s.settingGetter()

        baristaDemulti=dnaSyn_demultiplex.BARISTA_DEMULTIPLEX(s)
        baristaDemulti.demultiplex()

    elif cmd=="tag":
        print("\ndnaSynergizer tag",flush=True)
        s=dnaSyn_tag.settings_tag(opt)
        s.settingGetter()

        batistaTag=dnaSyn_tag.BARISTA_TAG(s)
        batistaTag.tag()

    elif cmd=="streamline":
        print("\ndnaSynergizer streamline",flush=True)
        
        s=dnaSyn_streamline.STREAMLINE_SETTINGS(opt)
        s.settingGetter()

        streamline=dnaSyn_streamline.STREAMLINE_EXE(s)
        streamline.generateShellScripts()
        streamline.run()

    print("DONE!",flush=True)

